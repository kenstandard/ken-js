// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");

function valueToJs(param) {
  return {
          valueType: param[/* valueType */0]
        };
}

function valueFromJs(param) {
  return /* record */[/* valueType */param.valueType];
}

function factToJs(param) {
  return {
          thingIdString: param[/* thingIdString */0],
          subjectId: param[/* subjectId */1],
          propertyId: param[/* propertyId */2],
          value: param[/* value */3]
        };
}

function factFromJs(param) {
  return /* record */[
          /* thingIdString */param.thingIdString,
          /* subjectId */param.subjectId,
          /* propertyId */param.propertyId,
          /* value */param.value
        ];
}

function thingToJs(param) {
  return {
          thingId: param[/* thingId */0],
          thingType: param[/* thingType */1]
        };
}

function thingFromJs(param) {
  return /* record */[
          /* thingId */param.thingId,
          /* thingType */param.thingType
        ];
}

function showFacts(g) {
  return $$Array.map(factToJs, Js_dict.values(g[/* facts */1]));
}

function showThings(g) {
  return $$Array.map(thingToJs, Js_dict.values(g[/* things */0]));
}

function showValues(g) {
  return $$Array.map(valueToJs, $$Array.map((function (f) {
                    return f[/* value */3];
                  }), Js_dict.values(g[/* facts */1])));
}

var isEqual = Caml_obj.caml_equal;

var isNotEqual = Caml_obj.caml_notequal;

function id(e) {
  return e[/* thingId */0][/* thingIdString */0];
}

function find(id, t) {
  return Js_dict.get(t, id);
}

function to_s(e) {
  return "[ID: " + (e[/* thingId */0][/* thingIdString */0] + "]");
}

function to_json(t) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "id",
                t[/* thingId */0][/* thingIdString */0]
              ],
              /* [] */0
            ]);
}

var Thing = /* module */[
  /* id */id,
  /* find */find,
  /* to_s */to_s,
  /* to_json */to_json
];

exports.valueToJs = valueToJs;
exports.valueFromJs = valueFromJs;
exports.factToJs = factToJs;
exports.factFromJs = factFromJs;
exports.thingToJs = thingToJs;
exports.thingFromJs = thingFromJs;
exports.showFacts = showFacts;
exports.showThings = showThings;
exports.showValues = showValues;
exports.isEqual = isEqual;
exports.isNotEqual = isNotEqual;
exports.Thing = Thing;
/* No side effect */
