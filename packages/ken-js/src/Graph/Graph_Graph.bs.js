// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var Config$BsKen = require("../Config.bs.js");
var Graph_T$BsKen = require("./Graph_T.bs.js");
var Graph_Fact$BsKen = require("./Graph_Fact.bs.js");
var Function$Rationale = require("rationale/src/Function.js");

function findFact(id) {
  return (function (param) {
      return Function$Rationale.Infix.$pipe$pipe$great(Graph_T$BsKen.F.facts, (function (e) {
                    return Js_dict.get(e, id);
                  }), param);
    });
}

function findThing(id, g) {
  return Graph_T$BsKen.F.findThing(id, g);
}

function findThingFromFact(g, edge, f) {
  var id = Graph_Fact$BsKen.edgeId(edge)(f);
  return Graph_T$BsKen.F.findThing(id, g);
}

function from_json(param) {
  return Json_decode.list(Graph_Fact$BsKen.from_json, param);
}

function to_json(t) {
  var facts = $$Array.map(Graph_Fact$BsKen.to_json, Js_dict.values(t.facts));
  var things = $$Array.map(Graph_T$BsKen.Thing.to_json, Js_dict.values(t.things));
  return Json_encode.object_(/* :: */[
              /* tuple */[
                Config$BsKen.JsonKeys.facts,
                facts
              ],
              /* :: */[
                /* tuple */[
                  Config$BsKen.JsonKeys.things,
                  things
                ],
                /* [] */0
              ]
            ]);
}

exports.findFact = findFact;
exports.findThing = findThing;
exports.findThingFromFact = findThingFromFact;
exports.from_json = from_json;
exports.to_json = to_json;
/* Graph_T-BsKen Not a pure module */
